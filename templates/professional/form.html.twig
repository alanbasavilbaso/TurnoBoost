{% extends 'base.html.twig' %}

{% block title %}{{ is_edit ? 'Editar' : 'Nuevo' }} Profesional - {{ clinic.name }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Bootstrap Selectpicker CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.14.0-beta3/dist/css/bootstrap-select.min.css">
    
    <style>
        /* Estilos personalizados para el selector de servicios */
        .selected-services-container {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
        }
        .form-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
            padding: 2rem;
        }
        .service-tag {
            background-color: #007bff;
            color: white;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.875rem;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .service-tag .remove-service {
            background: rgba(255, 255, 255, 0.3);
            border: none;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 12px;
            line-height: 1;
        }
        
        .service-tag .remove-service:hover {
            background: rgba(255, 255, 255, 0.5);
        }
        
        /* Personalización del selectpicker */
        .bootstrap-select .dropdown-toggle {
            border: 1px solid #ced4da;
            border-radius: 0.375rem;
        }
        
        .bootstrap-select .dropdown-toggle:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
    </style>
{% endblock %}

{% block body %}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">
                        <i class="fas fa-user-md text-primary me-2"></i>
                        {{ is_edit ? 'Editar Profesional' : 'Nuevo Profesional' }}
                    </h1>
                    <p class="text-muted mb-0">{{ clinic.name }}</p>
                </div>
                <a href="{{ path('app_professional_index') }}" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left"></i> Volver
                </a>
            </div>

            <!-- Flash Messages -->
            {% for type, messages in app.flashes %}
                {% for message in messages %}
                    <div class="alert alert-{{ type == 'error' ? 'danger' : type }} alert-dismissible fade show" role="alert">
                        {{ message }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                {% endfor %}
            {% endfor %}

            <!-- Form -->
            <div class="form-card">
                {{ form_start(form) }}
                
                <!-- Información Básica -->
                <h4 class="mb-3">
                    <i class="fas fa-user text-primary me-2"></i>
                    Información Básica
                </h4>
                
                <div class="row">
                    <div class="col-md-6 mb-3">
                        {{ form_label(form.name) }}
                        {{ form_widget(form.name) }}
                        {{ form_errors(form.name) }}
                    </div>
                    <div class="col-md-6 mb-3">
                        {{ form_label(form.specialty) }}
                        {{ form_widget(form.specialty) }}
                        {{ form_errors(form.specialty) }}
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6 mb-3">
                        {{ form_label(form.email) }}
                        {{ form_widget(form.email) }}
                        {{ form_errors(form.email) }}
                    </div>
                    <div class="col-md-6 mb-3">
                        {{ form_label(form.phone) }}
                        {{ form_widget(form.phone) }}
                        {{ form_errors(form.phone) }}
                    </div>
                </div>
                
                <div class="mb-4">
                    <div class="form-check">
                        {{ form_widget(form.active) }}
                        {{ form_label(form.active) }}
                    </div>
                    {{ form_errors(form.active) }}
                </div>
                
                <!-- Horarios de Disponibilidad -->
                <h4 class="mb-3">
                    <i class="fas fa-clock text-primary me-2"></i>
                    Horarios de Disponibilidad
                </h4>
                
                <div class="availability-section">
                    <p class="text-muted mb-3">
                        <i class="fas fa-info-circle"></i>
                        Configure los horarios de trabajo para cada día. Use formato 24 horas (ej: 09:00, 14:30). Puede agregar hasta 2 rangos horarios por día.
                    </p>
                    
                    {% set days = {
                        0: 'Lunes',
                        1: 'Martes',
                        2: 'Miércoles', 
                        3: 'Jueves',
                        4: 'Viernes',
                        5: 'Sábado',
                        6: 'Domingo'
                    } %}
                    
                    {% for dayNumber, dayName in days %}
                        <div class="day-row">
                            <div class="row">
                                <div class="col-md-2">
                                    <div class="form-check">
                                        {{ form_widget(attribute(form, 'availability_' ~ dayNumber ~ '_enabled')) }}
                                        <label class="form-check-label day-name" for="{{ attribute(form, 'availability_' ~ dayNumber ~ '_enabled').vars.id }}">
                                            {{ dayName }}
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-10">
                                    <div class="availability-ranges" data-day="{{ dayNumber }}">
                                        <!-- Rango 1 -->
                                        <div class="time-range" data-range="1">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <div class="time-input-group">
                                                        {{ form_label(attribute(form, 'availability_' ~ dayNumber ~ '_range1_start')) }}
                                                        {{ form_widget(attribute(form, 'availability_' ~ dayNumber ~ '_range1_start')) }}
                                                        {{ form_errors(attribute(form, 'availability_' ~ dayNumber ~ '_range1_start')) }}
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="time-input-group">
                                                        {{ form_label(attribute(form, 'availability_' ~ dayNumber ~ '_range1_end')) }}
                                                        {{ form_widget(attribute(form, 'availability_' ~ dayNumber ~ '_range1_end')) }}
                                                        {{ form_errors(attribute(form, 'availability_' ~ dayNumber ~ '_range1_end')) }}
                                                    </div>
                                                </div>
                                                <div class="col-md-4 d-flex align-items-end">
                                                    <button type="button" class="btn btn-sm btn-outline-primary add-range-btn" data-day="{{ dayNumber }}">
                                                        <i class="fas fa-plus"></i> Agregar rango
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Rango 2 -->
                                        <div class="time-range" data-range="2" style="display: none;">
                                            <div class="range-header d-flex justify-content-between align-items-center">
                                                <button type="button" class="btn btn-sm btn-outline-danger remove-range-btn" data-day="{{ dayNumber }}">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-3">
                                                    <div class="time-input-group">
                                                        {{ form_label(attribute(form, 'availability_' ~ dayNumber ~ '_range2_start')) }}
                                                        {{ form_widget(attribute(form, 'availability_' ~ dayNumber ~ '_range2_start')) }}
                                                        {{ form_errors(attribute(form, 'availability_' ~ dayNumber ~ '_range2_start')) }}
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="time-input-group">
                                                        {{ form_label(attribute(form, 'availability_' ~ dayNumber ~ '_range2_end')) }}
                                                        {{ form_widget(attribute(form, 'availability_' ~ dayNumber ~ '_range2_end')) }}
                                                        {{ form_errors(attribute(form, 'availability_' ~ dayNumber ~ '_range2_end')) }}
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
                
                <!-- Servicios Section -->
                <div class="row mb-4">
                    <div class="col-12">
                        <h5 class="mb-3">Servicios</h5>
                        
                        <!-- Error display -->
                        {{ form_errors(form.services) }}
                        
                        <!-- Services selector with selectpicker -->
                        <div class="form-group">
                            <label for="services-select" class="form-label">Seleccionar servicios:</label>
                            <select id="services-select" class="form-control selectpicker" 
                                    multiple 
                                    data-live-search="true" 
                                    data-size="8"
                                    data-width="100%"
                                    data-selected-text-format="count > 2"
                                    title="Buscar y seleccionar servicios..."
                                    {% if form.services.vars.value is defined and form.services.vars.value is not empty %}
                                        data-selected='{{ form.services.vars.value|json_encode|raw }}'
                                    {% endif %}>
                                {% for service in services %}
                                    <option value="{{ service.id }}" 
                                            data-subtext="${{ service.price }}"
                                            {% if form.services.vars.value is defined %}
                                                {% for selectedServiceId in form.services.vars.value %}
                                                    {% if selectedServiceId is iterable %}
                                                        {% if selectedServiceId.id == service.id %}selected{% endif %}
                                                    {% else %}
                                                        {% if selectedServiceId == service.id %}selected{% endif %}
                                                    {% endif %}
                                                {% endfor %}
                                            {% endif %}>
                                        {{ service.name }}
                                        {% if service.description %}
                                            - {{ service.description|slice(0, 50) }}{% if service.description|length > 50 %}...{% endif %}
                                        {% endif %}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                        
                        <!-- Selected services display -->
                        <div id="selected-services" class="mt-3">
                            <div class="selected-services-container"></div>
                        </div>
                        
                        <!-- Hidden original form field for compatibility -->
                        <div style="display: none;">
                            {{ form_widget(form.services) }}
                        </div>
                    </div>
                </div>
                
                <!-- Botones de acción -->
                <div class="row">
                    <div class="col-12">
                        <div class="d-flex justify-content-between">
                            <a href="{{ path('app_professional_index') }}" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Cancelar
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> 
                                {{ is_edit ? 'Actualizar' : 'Crear' }} Profesional
                            </button>
                        </div>
                    </div>
                </div>
                
                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
$(document).ready(function() {
    console.log('Inicializando Select2 mejorado...');
    
    // Verificar si Select2 está disponible y si el elemento existe
    if (typeof $.fn.select2 !== 'undefined' && $('#services-select').length > 0) {
        // Destruir instancia previa si existe
        if ($('#services-select').hasClass('select2-hidden-accessible')) {
            try {
                $('#services-select').select2('destroy');
            } catch (e) {
                console.warn('Error al destruir Select2:', e);
            }
        }
        
        // Inicializar Select2 con configuración mejorada
        $('#services-select').select2({
            theme: 'bootstrap-5',
            placeholder: '🔍 Buscar y seleccionar servicios...',
            allowClear: false,
            multiple: true,
            width: '100%',
            closeOnSelect: false,
            language: {
                noResults: function() {
                    return "❌ No se encontraron servicios";
                },
                searching: function() {
                    return "🔍 Buscando servicios...";
                },
                inputTooShort: function() {
                    return "Escribe para buscar servicios";
                },
                loadingMore: function() {
                    return "Cargando más servicios...";
                }
            },
            templateResult: function(option) {
                if (!option.id) {
                    return option.text;
                }
                return $('<span><i class="fas fa-concierge-bell me-2"></i>' + option.text + '</span>');
            },
            templateSelection: function(option) {
                if (!option.id) {
                    return option.text;
                }
                return $('<span><i class="fas fa-check me-1"></i>' + option.text + '</span>');
            }
        });
        
        // Manejar cambios con animación
        $('#services-select').on('change', function() {
            updateSelectedServices();
        });
        
        // Inicializar servicios preseleccionados
        updateSelectedServices();
        
        // Mejorar la experiencia visual
        $('#services-select').on('select2:open', function() {
            $('.select2-dropdown').addClass('animate__animated animate__fadeIn animate__faster');
        });
    } else {
        console.error('Select2 no está disponible o el elemento #services-select no existe');
    }
    
    function updateSelectedServices() {
        var selectedOptions = $('#services-select option:selected');
        var container = $('.selected-services-container');
        
        // Animación de salida
        container.fadeOut(200, function() {
            container.empty();
            
            selectedOptions.each(function() {
                var serviceId = $(this).val();
                var serviceName = $(this).text();
                
                var badge = $('<span class="badge bg-primary me-2 mb-2 position-relative" style="font-size: 0.9rem; padding: 0.5rem 0.75rem;">' +
                    '<i class="fas fa-concierge-bell me-2"></i>' + serviceName + 
                    ' <button type="button" class="btn btn-sm btn-link text-white p-0 ms-2" onclick="removeService(' + serviceId + ')" style="font-size: 1.1rem; line-height: 1;">' +
                    '<i class="fas fa-times"></i></button></span>');
                
                container.append(badge);
            });
            
            // Animación de entrada
            container.fadeIn(200);
            syncWithOriginalForm();
        });
    }
    
    function syncWithOriginalForm() {
        var selectedValues = $('#services-select').val() || [];
        console.log('Valores seleccionados:', selectedValues);
        
        // Buscar el campo original del formulario de Symfony
        var originalField = $('select[name*="services"]').not('#services-select');
        
        if (originalField.length === 0) {
            originalField = $('select[name$="[services][]"], input[name$="[services][]"]');
        }
        
        if (originalField.length === 0) {
            originalField = $('select[name*="professional"][name*="services"], input[name*="professional"][name*="services"]');
        }
        
        // Si no encontramos el campo original, crear campos hidden individuales
        if (originalField.length === 0) {
            console.log('Creando campos hidden individuales para los servicios...');
            
            // Remover todos los campos previos de servicios
            $('input[name^="professional[services]"]').remove();
            
            // Crear un campo hidden individual para cada servicio seleccionado
            selectedValues.forEach(function(value, index) {
                var hiddenInput = $('<input type="hidden" name="professional[services][]" value="' + value + '">');
                $('#services-select').closest('form').append(hiddenInput);
            });
            
            console.log('Campos hidden individuales creados:', selectedValues.length, 'servicios');
            return;
        }
        
        // Si encontramos el campo original, sincronizar normalmente
        if (originalField.length > 0) {
            console.log('Campo encontrado:', originalField.attr('name'), 'tipo:', originalField.prop('tagName'));
            
            if (originalField.is('select')) {
                // Para campos select múltiple
                originalField.find('option').prop('selected', false);
                selectedValues.forEach(function(value) {
                    originalField.find('option[value="' + value + '"]').prop('selected', true);
                });
            } else {
                // Para campos input, NO usar join() - crear campos separados
                originalField.remove(); // Remover el campo actual
                
                selectedValues.forEach(function(value) {
                    var hiddenInput = $('<input type="hidden" name="professional[services][]" value="' + value + '">');
                    $('#services-select').closest('form').append(hiddenInput);
                });
            }
            
            // Disparar evento change
            if (originalField.length && originalField.is('select')) {
                originalField.trigger('change');
            }
            
            console.log('Campo sincronizado con', selectedValues.length, 'servicios individuales');
        } else {
            console.error('No se pudo encontrar el campo original del formulario');
        }
    }
    
    window.removeService = function(serviceId) {
        // Animación al remover
        var badge = $('button[onclick="removeService(' + serviceId + ')"]').parent();
        badge.fadeOut(300, function() {
            $('#services-select option[value="' + serviceId + '"]').prop('selected', false);
            $('#services-select').trigger('change');
        });
    };
});

// Para SPAs - reinicializar en navegación
document.addEventListener('turbo:load', function() {
    if (typeof $ !== 'undefined' && $('#services-select').length) {
        $(document).ready();
    }
});
</script>
{% endblock %}
